This file describes the core ship modules in the TI-Trek game.
These are the basic modules that any ship will eventually have,
and will exclude anything combat-related.

Each module is defined in memory as so:
typedef struct {
    bool unlocked;
    uint8_t modclass;
    unsigned char techid;
    unsigned char techtype;     // locked, determines compatible tech type
//    unsigned char techclass;    // locked, determines compatible module classes
    bool online, typelocked;            // is module online
    power_t power;          // power control
    health_t health;        // health monitor
    data_t data;
} module_t;

where:
unlocked = indicates if you have purchased the ability to use this slot
modclass - is system or tactical
techid = the literal identifier of the equiped module (this number identifies the module equipped, not it's type or class
techtype = the type of tech that can be equipped to this module. This only affects 'system' classes
online = this should be obvious
typelocked = can this module be changed? This can be removed and controlled by modclass
power = a structure containing the current power supply, usage, and input to the module
health = a structure containing the health and max health of the module
data = a structure containing info about the module


Module Class Core/System:
Type 0: Life Support
  - controls the maximum crew size of the ship
  - the destruction of this system kills your crew and causes your ship to become 'abandoned'
  - every player must spawn with a base version of this module equipped
  
Type 1: Warp Core
  - supplies power to the ship and enables warp drive travel
  - when below 50% effective power output is reduced
  - when below 25%, attempting to enable warp drive will fail
  - when below 25% effective power output is *greatly* reduced
  - when below 10% a warp core breach becomes possible (probability increases the closer you get to 0)
  - a breaching warp core must be ejected before a timer, or your ship is destroyed
  - an ejected warp core becomes an 'entity' that continues to count down until detonating outside the ship. It is a large and powerful explosion
  
Type 2: Warp Drive
  - enables warp speed travel
  - your effective warp speed is determined by the equipped module (and any upgrades to it)
  - when below 50%, effective warp speed is reduced
  - when below 25%, effective warp speed is greatly reduced
  - when at 0%, warp speed impossible
  ** I intend this to be an open world game. There will be no warping directly between systems, or requirement...
    that you go from point A to point B at warp. However, as you will see in the navigational sensors unit, you *can*
    use the sensors to input a direction to jump to warp in if you want to get to a specific location. However, you'll also
    have to plan for hazards in the way while at warp that you'll have to avoid (or would have to be programmed into your vectors).
  
Type 3: Impulse Drive
  - enables sublight speed travel
  - maximum attainable non-warp speed determined by the equipped drive module (and upgrades)
  - speed available at thrusters and at 25% intervals..
    - thrusters = minimal speed, generally used for course corrections for gravity when attempting to achieve orbits
    - 1/4 impulse (25% of max drive speed)
    - 1/2 impulse (50% of max drive speed)
    - 3/4 impulse (75% of max drive speed)
    - 100% impulse (100% of max drive speed)
    
  Type 4: Navigational Sensors
    - enables sector scans for terrain, starbases, and other environmental hazards
    - does NOT scan for hostiles, ships, or other entities
    - can be used to set warp vectors, if choosing to warp to a specific planet
      (this is an open world game, choosing to warp TO a specific planet does not change the fact that you are still warping
      through an open-world map)
  
  Type 5: Transporters
    - used to beam crew off the ship, cargo onto the ship, exchange resources with other players, etc
    - more uses can be added over time
